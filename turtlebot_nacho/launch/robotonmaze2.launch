<?xml version="1.0" encoding="UTF-8" ?>

<launch>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>
  <arg name="lidar" value="$(optenv TURTLEBOT_LIDAR rplidar)"/>  <!-- -->
  <arg name="use_sim_time" default="true" />
  <arg name="headless" default="false" />


  <!-- MAP CHOOSE -->
  <arg name="world_name" default="$(find turtlebot_nacho)/worlds/maze1.world"/>


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

<!-- ROBOT MODEL WITH LASER -->

  <include file="$(find turtlebot_walle)/launch/includes/simulated_kobuki_lidar.launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="lidar" value="$(arg lidar)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

<!-- SLAM -->

 <include file="$(find turtlebot_nacho)/launch/includes/gmapping.launch"/>

 <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
   <rosparam file="$(find turtlebot_nacho)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
   <rosparam file="$(find turtlebot_nacho)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
   <rosparam file="$(find turtlebot_nacho)/params/local_costmap_params.yaml" command="load" />
   <rosparam file="$(find turtlebot_nacho)/params/global_costmap_params.yaml" command="load" />
   <rosparam file="$(find turtlebot_nacho)/params/dwa_local_planner_params.yaml" command="load" />
   <rosparam file="$(find turtlebot_nacho)/params/move_base_params.yaml" command="load" />
   <rosparam file="$(find turtlebot_nacho)/params/global_planner_params.yaml" command="load" />
   <rosparam file="$(find turtlebot_nacho)/params/navfn_global_planner_params.yaml" command="load" />


   <remap from="cmd_vel" to="/cmd_vel_mux/input/navi"/>

 </node>

<!--FRONTIER EXPLORATION -->

<node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
  <param name="robot_base_frame" value="base_footprint"/>
  <param name="costmap_topic" value="move_base/global_costmap/costmap"/>
  <param name="costmap_updates_topic" value="move_base/global_costmap/costmap_updates"/>
  <param name="visualize" value="true"/>
  <param name="planner_frequency" value="0.33"/>
  <param name="progress_timeout" value="30.0"/>
  <param name="potential_scale" value="10.0"/>
  <param name="orientation_scale" value="0.0"/>
  <param name="gain_scale" value="1.0"/>
  <param name="transform_tolerance" value="0.5"/>
  <param name="min_frontier_size" value="0.2"/>
</node>



<!--node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
 <param name="robot_base_frame" value="base_footprint"/>
 <param name="costmap_topic" value="map"/>
 <param name="costmap_updates_topic" value="map_updates"/>
 <param name="visualize" value="true"/>
 <param name="planner_frequency" value="0.33"/>
 <param name="progress_timeout" value="30.0"/>
 <param name="potential_scale" value="10.0"/>
 <param name="orientation_scale" value="0.0"/>
 <param name="gain_scale" value="1.0"/>
 <param name="transform_tolerance" value="0.3"/>
 <param name="min_frontier_size" value="0.25"/>
</node-->

 <!--include file="$(find explore_lite)/launch/explore_costmap.launch"/-->

 <!--include file="$(find turtlebot_nacho)/launch/includes/frontierexploration.launch"/-->

</launch>
